{"version":3,"sources":["./src/app/app.component.html","./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/services/apis/emails/emails.module.ts","./src/app/services/apis/emails/emails.service.ts","./src/app/store/effects.ts","./src/app/store/emails/emails.actions.ts","./src/app/store/emails/emails.effects.ts","./src/app/store/emails/emails.reducers.ts","./src/app/store/emails/emails.state.ts","./src/app/store/reducers.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>Welcome to {{ title }}!</h1>\\n</div>\\n<router-outlet></router-outlet>\\n\\n<footer>&copy; Email Server</footer>\\n\";","var map = {\n\t\"./homepage/homepage.module\": [\n\t\t\"./src/app/homepage/homepage.module.ts\",\n\t\t\"homepage-homepage-module\"\n\t],\n\t\"./not_found/not_found.module\": [\n\t\t\"./src/app/not_found/not_found.module.ts\",\n\t\t\"not_found-not_found-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './homepage/homepage.module#HomepageModule',\n    pathMatch: 'full'\n  },\n  {\n    path: '404',\n    loadChildren: './not_found/not_found.module#NotFoundModule',\n    pathMatch: 'full'\n  },\n  {\n    path: '404/',\n    loadChildren: './not_found/not_found.module#NotFoundModule',\n    pathMatch: 'full'\n  },\n  {\n    path: '**',\n    loadChildren: './not_found/not_found.module#NotFoundModule'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaXRlL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  private pTitle = 'Email Server';\n\n  get title(): string {\n    return this.pTitle;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { EmailsAPIModule } from './services/apis/emails/emails.module';\nimport { Effects } from './store/effects';\nimport { reducers } from './store/reducers';\n\nconst ApiModules = [EmailsAPIModule];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserTransferStateModule,\n    AppRoutingModule,\n    EffectsModule.forRoot(Effects),\n    StoreModule.forRoot(reducers),\n\n    ...ApiModules,\n  ],\n  exports: [AppRoutingModule],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\n\nimport { EmailsApiService } from './emails.service';\n\n@NgModule({\n  providers: [EmailsApiService],\n  exports: [EmailsApiService],\n})\nexport class EmailsAPIModule {}\n","import { Injectable } from '@angular/core';\nimport { EmailsDTO } from '@mono/root_shared/dtos';\nimport { Email, Emails } from '@mono/root_shared/models';\nimport { ajax, AjaxResponse } from 'rxjs/ajax';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class EmailsApiService {\n  readonly url = 'http://localhost:3030/emails';\n\n  constructor() {}\n\n  all(): Observable<Emails> {\n    return ajax({\n      url: this.url,\n      method: 'GET',\n    }).pipe(\n      map((response: AjaxResponse) => {\n        return (response.response as EmailsDTO.GET.Response).data;\n      }),\n      map((emails: Emails) => {\n        return emails.map((email: Email) => {\n          email.date = new Date(email.date);\n          return email;\n        });\n      })\n    );\n  }\n\n  get(id: number): Observable<Email> {\n    return ajax({\n      url: `${this.url}/${id}`,\n      method: 'GET',\n    }).pipe(\n      map((response: AjaxResponse) => {\n        return (response.response as EmailsDTO.GET.Response).data[0];\n      }),\n      map((email: Email) => {\n        email.date = new Date(email.date);\n        return email;\n      })\n    );\n  }\n\n  delete(id: number): Observable<Email> {\n    return ajax({\n      url: `${this.url}/${id}`,\n      method: 'DELETE',\n    }).pipe(\n      map((response: AjaxResponse) => {\n        return (response.response as EmailsDTO.GET.Response).data[0];\n      }),\n      map((email: Email) => {\n        email.date = new Date(email.date);\n        return email;\n      })\n    );\n  }\n}\n","import { EmailsEffects } from './emails/emails.effects';\n\nexport const Effects = [EmailsEffects];\n","import { Email, Emails } from '@mono/root_shared/models';\nimport { Action } from '@ngrx/store';\n\nexport namespace EmailsActions {\n  export enum ActionTypes {\n    LOAD = '[Emails] Load',\n    LOADED = '[Emails] Loaded',\n    EMAIL_LOAD = '[Email] Load',\n    EMAIL_LOADED = '[Email] Loaded',\n    EMAIL_DELETE = '[Email] Delete',\n    EMAIL_DELETED = '[Email] Deleted',\n  }\n\n  export class Load implements Action {\n    type = ActionTypes.LOAD;\n    constructor(public payload: any) {}\n  }\n\n  export interface LoadedPayload {\n    emails: Emails;\n  }\n\n  export class Loaded implements Action {\n    type = ActionTypes.LOADED;\n    constructor(public payload: LoadedPayload) {}\n  }\n\n  export interface EmailLoadPayload {\n    id: number;\n  }\n\n  export class EmailLoad implements Action {\n    type = ActionTypes.EMAIL_LOAD;\n    constructor(public payload: EmailLoadPayload) {}\n  }\n\n  export interface EmailLoadedPayload {\n    email: Email;\n  }\n\n  export class EmailLoaded implements Action {\n    type = ActionTypes.EMAIL_LOADED;\n    constructor(public payload: EmailLoadedPayload) {}\n  }\n\n  export class EmailDelete implements Action {\n    type = ActionTypes.EMAIL_DELETE;\n    constructor(public payload: EmailLoadPayload) {}\n  }\n\n  export class EmailDeleted implements Action {\n    type = ActionTypes.EMAIL_DELETED;\n    constructor(public payload: any) {}\n  }\n\n  export type Actions = Load | Loaded | EmailLoad | EmailLoaded | EmailDelete | EmailDeleted;\n}\n","import { Injectable } from '@angular/core';\nimport { Email, Emails } from '@mono/root_shared/models';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\nimport { exhaustMap, map, mergeMap, take } from 'rxjs/operators';\n\nimport { EmailsActions } from './emails.actions';\nimport { EmailsReducers } from './emails.reducers';\nimport { EmailsState } from './emails.state';\nimport { State } from '../state';\nimport { EmailsApiService } from '../../services/apis/emails/emails.service';\n\n@Injectable()\nexport class EmailsEffects {\n  @Effect()\n  load$: Observable<void> = this.actions$.pipe(\n    ofType(EmailsActions.ActionTypes.LOAD),\n    exhaustMap(() => {\n      return this.loadEmails$();\n    })\n  );\n\n  @Effect()\n  loadEmail$: Observable<void> = this.actions$.pipe(\n    ofType(EmailsActions.ActionTypes.EMAIL_LOAD),\n    exhaustMap((action: EmailsActions.Actions) => {\n      return this.email$(action.payload.id);\n    })\n  );\n\n  @Effect()\n  deleteEmail$: Observable<void> = this.actions$.pipe(\n    ofType(EmailsActions.ActionTypes.EMAIL_DELETE),\n    exhaustMap((action: EmailsActions.Actions) => {\n      return this.emailDelete$(action.payload.id);\n    })\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<State>,\n    private emailsApiService: EmailsApiService\n  ) {}\n\n  private loadEmails$(): Observable<EmailsActions.Loaded | any> {\n    return this.store.select(EmailsReducers.getAllEmails).pipe(\n      take(1),\n      mergeMap((emails: EmailsState.Emails) => {\n        if (Object.keys(!!emails ? emails : {}).length === 0) {\n          return this.emailsApiService.all();\n        }\n        return Object.values(emails);\n      }),\n      map((emails: Emails) => {\n        return new EmailsActions.Loaded({ emails });\n      })\n    );\n  }\n\n  private email$(id: number): Observable<EmailsActions.Loaded | any> {\n    return this.store.select(EmailsReducers.getAllEmails).pipe(\n      take(1),\n      mergeMap((emails: EmailsState.Emails) => {\n        if (!!emails[id] && !!emails[id].original) {\n          return of(emails[id]);\n        }\n        return this.emailsApiService.get(id);\n      }),\n      map((email: Email) => {\n        return new EmailsActions.EmailLoaded({ email });\n      })\n    );\n  }\n\n  private emailDelete$(id: number): Observable<EmailsActions.Loaded | any> {\n    return this.emailsApiService.delete(id).pipe(\n      map((email: Email) => {\n        return new EmailsActions.EmailDeleted({ email });\n      })\n    );\n  }\n}\n","import { Email, Emails } from '@mono/root_shared/models';\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { EmailsActions } from './emails.actions';\nimport { EmailsState } from './emails.state';\nimport { State } from '../state';\n\nconst emails = (state: EmailsState, payloadEmails: Emails): any => {\n  const emails: EmailsState.Emails = {};\n\n  payloadEmails.forEach((email: Email) => {\n    emails[email.id] = email;\n  });\n  return { emails };\n};\n\nconst email = (state: EmailsState, email: Email): any => {\n  const emails: EmailsState.Emails = Object.assign({}, state.emails);\n  const newEmail: Email = Object.assign({}, email, { read: true });\n\n  emails[email.id] = newEmail;\n\n  return { emails, email: newEmail };\n};\n\nconst deleteEmail = (state: EmailsState, email: Email): any => {\n  const emails: EmailsState.Emails = Object.assign({}, state.emails);\n  delete emails[email.id];\n\n  const newEmail: Email = Object.assign({}, email, { deleted: true });\n\n  return { emails, email: newEmail };\n};\n\nexport namespace EmailsReducers {\n  export function reducer(\n    state: EmailsState = EmailsState.initial,\n    action: EmailsActions.Actions\n  ): EmailsState {\n    switch (action.type) {\n      case EmailsActions.ActionTypes.LOADED:\n        return emails(state, action.payload.emails);\n\n      case EmailsActions.ActionTypes.EMAIL_LOADED:\n        return email(state, action.payload.email);\n\n      case EmailsActions.ActionTypes.EMAIL_DELETED:\n        return deleteEmail(state, action.payload.email);\n      default:\n        return state;\n    }\n  }\n\n  export const getEmails = createFeatureSelector<State, EmailsState>('emails');\n  export const getAllEmails = createSelector(getEmails, state => state.emails);\n\n  export const getEmail = createFeatureSelector<State, EmailsState>('email');\n  export const getLoadedEmail = createSelector(getEmail, state => state.email);\n}\n","import { Email } from '@mono/root_shared/models';\n\nexport namespace EmailsState {\n  export interface Emails {\n    [id: number]: Email;\n  }\n\n  export const initial: EmailsState = {\n    emails: null,\n    email: null,\n  };\n}\n\nexport interface EmailsState {\n  emails: EmailsState.Emails;\n  email: Email;\n}\n","import { EmailsReducers } from './emails/emails.reducers';\n\nexport const reducers = {\n  emails: EmailsReducers.reducer,\n  email: EmailsReducers.reducer,\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule);\n});\n"],"sourceRoot":"webpack:///"}